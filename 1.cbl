       IDENTIFICATION DIVISION.
       PROGRAM-ID. SQUID-BINGO-1.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT BINGO-BOARDS ASSIGN TO "BOARDS2"

           ORGANIZATION IS SEQUENTIAL.
           SELECT BINGO-NUMBERS ASSIGN TO "NUMBERS2"

           ORGANIZATION IS SEQUENTIAL.
       DATA DIVISION.
       FILE SECTION.
       FD BINGO-BOARDS.
       01 BINGO-BOARD-ROWS.
          05 BINGO-BOARD-NEXT-ROW       PIC X(15).

       FD BINGO-NUMBERS.
       01 BINGO-NUMBERS-ROWS.
           05 BINGO-NUMBERS-NEXT-NUMBER            PIC XX.
           05 BINGO-NUMBERS-LINEBREAK              PIC X.

       WORKING-STORAGE SECTION.
       01 SWITCHES.
          05 BINGO-BOARDS-EOF-SWITCH    PIC X     VALUE 'N'.
             88 BINGO-BOARDS-END-OF-FILE          VALUE 'Y'.
          05 BINGO-NUMBERS-EOF-SWITCH   PIC X     VALUE 'N'.
             88 BINGO-NUMBERS-END-OF-FILE         VALUE 'Y'.
          05 BINGO-FOUND-SWITCH         PIC X     VALUE 'N'.
             88 BINGO-FOUND                       VALUE 'Y'.
             88 BINGO-NOT-FOUND                   VALUE 'N'.

       01 COUNTERS.
          05 RECORD-COUNTER             PIC 9(5)  VALUE 99999.
          05 SCORE-COUNTER              PIC 9(5)  VALUE 0.
          05 SCORE-COUNTER-MULTIPLIED   PIC 9(7)  VALUE 0.
          05 CELL-NUMERIC               PIC 99.
          05 NEXT-NUMBER-NUMERIC        PIC 99.
          05 FOUND-BOARD-NUMBER         PIC 99.

       01 NUMERIC-EDITED-FIELDS.
          05 FILLER                     PIC X(15) VALUE SPACE.
          05 BINGO-BOARD-ROW-NE OCCURS 5 TIMES.
             10 BINGO-BOARD-COLUMN-NE OCCURS 5 TIMES.
                15 BINGO-BOARD-EDITED-NUMBER PIC XX.
                15 FILLER                    PIC X VALUE SPACE.

       01 BINGO-BOARD-LIST OCCURS 1 TO 99999 TIMES
             DEPENDING ON RECORD-COUNTER
             INDEXED BY BINGO-BOARD-LIST-INDEX.
          05 BINGO-BOARD-ALREADY-FOUND  PIC X  VALUE 'N'.
                88 BINGO-BOARD-FOUND           VALUE 'Y'.
                88 BINGO-BOARD-NOT-FOUND       VALUE 'N'.
          05 BINGO-BOARD-LIST-ROWS OCCURS 5 TIMES
                INDEXED BY BINGO-BOARD-LIST-ROWS-INDEX.
             10 BINGO-BOARD-LIST-ROW    PIC X(15).
             10 BINGO-BOARD-LIST-COLUMNS
                   REDEFINES BINGO-BOARD-LIST-ROW
                   OCCURS 5 TIMES
                   INDEXED BY BINGO-BOARD-LIST-COLUMNS-INDEX.
                15 BINGO-BOARD-CELL
                                        PIC X(2).
                15 BINGO-BOARD-CELL-FOUND-SWITCH
                                        PIC X.
                   88 BINGO-BOARD-CELL-NOT-FOUND VALUE 'N'.
                   88 BINGO-BOARD-CELL-FOUND     VALUE 'Y'.


       PROCEDURE DIVISION.
       MAIN-PROCEDURE.
           PERFORM READ-INPUT-BOARDS.
           DISPLAY "NUMBER OF BINGO BOARDS READ ==> " RECORD-COUNTER.
           PERFORM READ-NEXT-DRAW.
           GOBACK.

       READ-INPUT-BOARDS.
           OPEN INPUT BINGO-BOARDS.
           SET BINGO-BOARD-LIST-INDEX TO 1.
           SET BINGO-BOARD-LIST-ROWS-INDEX TO 0.
           SET BINGO-BOARD-LIST-COLUMNS-INDEX TO 1.
           PERFORM READ-NEXT-BOARD UNTIL BINGO-BOARDS-END-OF-FILE.
           CLOSE BINGO-BOARDS.
           SET BINGO-BOARD-LIST-INDEX DOWN BY 1.
           SET RECORD-COUNTER TO BINGO-BOARD-LIST-INDEX.

       READ-NEXT-BOARD.
           READ BINGO-BOARDS NEXT RECORD
           AT END SET BINGO-BOARDS-END-OF-FILE TO TRUE
           NOT AT END
               PERFORM INSERT-RECORD.

       INSERT-RECORD.
           SET BINGO-BOARD-LIST-ROWS-INDEX UP BY 1.
           IF (NOT (BINGO-BOARD-NEXT-ROW = SPACE))
              MOVE BINGO-BOARD-NEXT-ROW
                 TO BINGO-BOARD-LIST-ROW(BINGO-BOARD-LIST-INDEX
                 BINGO-BOARD-LIST-ROWS-INDEX)
              PERFORM INITIALIZE-FOUND-SWITCHES
              PERFORM INITIALIZE-CELL-NUMBERS
              IF BINGO-BOARD-LIST-ROWS-INDEX IS GREATER THAN 5

                 SET BINGO-BOARD-LIST-INDEX UP BY 1
                 SET BINGO-BOARD-LIST-ROWS-INDEX TO 0
                 SET BINGO-BOARD-NOT-FOUND(BINGO-BOARD-LIST-INDEX)
                   TO TRUE
              END-IF

           END-IF.

       INITIALIZE-FOUND-SWITCHES.
           PERFORM VARYING BINGO-BOARD-LIST-COLUMNS-INDEX
              FROM 1 BY 1 UNTIL
              BINGO-BOARD-LIST-COLUMNS-INDEX IS GREATER THAN 5
              SET BINGO-BOARD-CELL-NOT-FOUND(
                  BINGO-BOARD-LIST-INDEX
                  BINGO-BOARD-LIST-ROWS-INDEX
                  BINGO-BOARD-LIST-COLUMNS-INDEX) TO TRUE
           END-PERFORM.

       INITIALIZE-CELL-NUMBERS.
           PERFORM VARYING BINGO-BOARD-LIST-COLUMNS-INDEX
               FROM 1 BY 1 UNTIL
               BINGO-BOARD-LIST-COLUMNS-INDEX IS GREATER THAN 5
               IF (BINGO-BOARD-CELL(
                 BINGO-BOARD-LIST-INDEX
                 BINGO-BOARD-LIST-ROWS-INDEX
                 BINGO-BOARD-LIST-COLUMNS-INDEX
               )(1:1) = SPACE)
               MOVE ZERO TO BINGO-BOARD-CELL(
                 BINGO-BOARD-LIST-INDEX
                 BINGO-BOARD-LIST-ROWS-INDEX
                 BINGO-BOARD-LIST-COLUMNS-INDEX
               )(1:1)
               END-IF
           END-PERFORM.

       READ-NEXT-DRAW.
           OPEN INPUT BINGO-NUMBERS.
           PERFORM READ-DRAW-NUMBER UNTIL BINGO-NUMBERS-END-OF-FILE.
           CLOSE BINGO-NUMBERS.

       READ-DRAW-NUMBER.
           SET BINGO-NOT-FOUND TO TRUE.
           INITIALIZE SCORE-COUNTER.
           INITIALIZE SCORE-COUNTER-MULTIPLIED.
           PERFORM READ-NEXT-NUMBER WITH TEST BEFORE UNTIL BINGO-FOUND
              OR BINGO-NUMBERS-END-OF-FILE.
           IF BINGO-FOUND
              DISPLAY "BINGO! THE NUMBER WAS " BINGO-NUMBERS-NEXT-NUMBER
              " AND THE BOARD WAS " FOUND-BOARD-NUMBER
              PERFORM CALCULATE-SCORE
              PERFORM PRINT-BOARD
           ELSE
              DISPLAY "NO MORE WINNING BOARDS FOUND."
           END-IF.


       READ-NEXT-NUMBER.
           READ BINGO-NUMBERS NEXT RECORD
           AT END SET BINGO-NUMBERS-END-OF-FILE TO TRUE
           NOT AT END PERFORM CHECK-NUMBER.

       CHECK-NUMBER.

           PERFORM VARYING BINGO-BOARD-LIST-INDEX FROM 1 BY 1 UNTIL
              BINGO-BOARD-LIST-INDEX IS GREATER THAN RECORD-COUNTER
              IF (BINGO-BOARD-NOT-FOUND(BINGO-BOARD-LIST-INDEX))
                 PERFORM CHECK-BOARD-FOR-NUMBER
                 PERFORM CHECK-IF-BINGO
              END-IF
           END-PERFORM.

       CHECK-BOARD-FOR-NUMBER.
           PERFORM VARYING BINGO-BOARD-LIST-ROWS-INDEX FROM 1 BY 1 UNTIL
               BINGO-BOARD-LIST-ROWS-INDEX IS GREATER THAN 5
               PERFORM CHECK-BOARD-FOR-NUMBER-IN-ROW
           END-PERFORM.

       CHECK-BOARD-FOR-NUMBER-IN-ROW.
           PERFORM VARYING BINGO-BOARD-LIST-COLUMNS-INDEX FROM 1 BY 1
               UNTIL BINGO-BOARD-LIST-COLUMNS-INDEX IS GREATER THAN 5
               PERFORM CHECK-BOARD-FOR-NUMBER-IN-CELL
           END-PERFORM.

       CHECK-BOARD-FOR-NUMBER-IN-CELL.
           IF (BINGO-BOARD-CELL(
               BINGO-BOARD-LIST-INDEX
               BINGO-BOARD-LIST-ROWS-INDEX
               BINGO-BOARD-LIST-COLUMNS-INDEX
             ) = BINGO-NUMBERS-NEXT-NUMBER)
               SET BINGO-BOARD-CELL-FOUND(
                 BINGO-BOARD-LIST-INDEX
                 BINGO-BOARD-LIST-ROWS-INDEX
                 BINGO-BOARD-LIST-COLUMNS-INDEX) TO TRUE
           END-IF.

       CHECK-IF-BINGO.
           PERFORM VARYING BINGO-BOARD-LIST-ROWS-INDEX FROM 1 BY 1 UNTIL
               BINGO-BOARD-LIST-ROWS-INDEX IS GREATER THAN 5
               SET BINGO-BOARD-LIST-COLUMNS-INDEX TO 1
               PERFORM CHECK-IF-BINGO-IN-ROW
           END-PERFORM.
           PERFORM VARYING BINGO-BOARD-LIST-COLUMNS-INDEX FROM 1 BY 1
               UNTIL BINGO-BOARD-LIST-COLUMNS-INDEX IS GREATER THAN 5
               SET BINGO-BOARD-LIST-ROWS-INDEX TO 1
               PERFORM CHECK-IF-BINGO-IN-COLUMN
           END-PERFORM.

       CHECK-IF-BINGO-IN-ROW.
           IF (BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX
             BINGO-BOARD-LIST-COLUMNS-INDEX
              ) AND
             BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX
             BINGO-BOARD-LIST-COLUMNS-INDEX + 1
              ) AND
             BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX
             BINGO-BOARD-LIST-COLUMNS-INDEX + 2
              ) AND
             BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX
             BINGO-BOARD-LIST-COLUMNS-INDEX + 3
              ) AND
             BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX
             BINGO-BOARD-LIST-COLUMNS-INDEX + 4
              )
           )
              SET BINGO-FOUND TO TRUE
              SET BINGO-BOARD-FOUND(BINGO-BOARD-LIST-INDEX) TO TRUE
              MOVE BINGO-BOARD-LIST-INDEX TO FOUND-BOARD-NUMBER

           END-IF.

        CHECK-IF-BINGO-IN-COLUMN.
           IF (BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX
             BINGO-BOARD-LIST-COLUMNS-INDEX
              ) AND
             BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX + 1
             BINGO-BOARD-LIST-COLUMNS-INDEX
              ) AND
             BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX + 2
             BINGO-BOARD-LIST-COLUMNS-INDEX
              ) AND
             BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX + 3
             BINGO-BOARD-LIST-COLUMNS-INDEX
              ) AND
             BINGO-BOARD-CELL-FOUND(
             BINGO-BOARD-LIST-INDEX
             BINGO-BOARD-LIST-ROWS-INDEX + 4
             BINGO-BOARD-LIST-COLUMNS-INDEX
              )
           )
              SET BINGO-FOUND TO TRUE
              SET BINGO-BOARD-FOUND(BINGO-BOARD-LIST-INDEX) TO TRUE
              MOVE BINGO-BOARD-LIST-INDEX TO FOUND-BOARD-NUMBER

           END-IF.

       CALCULATE-SCORE.
           SET BINGO-BOARD-LIST-INDEX TO FOUND-BOARD-NUMBER
           PERFORM VARYING BINGO-BOARD-LIST-ROWS-INDEX FROM 1 BY 1
              UNTIL BINGO-BOARD-LIST-ROWS-INDEX IS GREATER THAN 5
              PERFORM VARYING BINGO-BOARD-LIST-COLUMNS-INDEX FROM 1 BY 1
                 UNTIL BINGO-BOARD-LIST-COLUMNS-INDEX IS GREATER THAN 5
                 IF (BINGO-BOARD-CELL-NOT-FOUND(
                   BINGO-BOARD-LIST-INDEX
                   BINGO-BOARD-LIST-ROWS-INDEX
                   BINGO-BOARD-LIST-COLUMNS-INDEX
                    )
                 )
                    MOVE BINGO-BOARD-CELL(
                        BINGO-BOARD-LIST-INDEX
                        BINGO-BOARD-LIST-ROWS-INDEX
                        BINGO-BOARD-LIST-COLUMNS-INDEX
                        ) TO CELL-NUMERIC
                    ADD CELL-NUMERIC TO SCORE-COUNTER
                        ON SIZE ERROR
                        DISPLAY "ERROR: SCORE-COUNTER IS TOO BIG"
                 END-IF
              END-PERFORM
           END-PERFORM.
           MOVE BINGO-NUMBERS-NEXT-NUMBER
              TO NEXT-NUMBER-NUMERIC
           DISPLAY "SCORE: " SCORE-COUNTER
           DISPLAY "NUMBER: " NEXT-NUMBER-NUMERIC
           MULTIPLY SCORE-COUNTER BY NEXT-NUMBER-NUMERIC
                        GIVING SCORE-COUNTER-MULTIPLIED
                        ON SIZE ERROR
                        DISPLAY "ERROR: SCORE-COUNTER IS TOO BIG"
           END-MULTIPLY.
           DISPLAY "SCORE RESULT IS " SCORE-COUNTER-MULTIPLIED.

       PRINT-BOARD.
           PERFORM VARYING BINGO-BOARD-LIST-ROWS-INDEX FROM 1 BY 1
              UNTIL BINGO-BOARD-LIST-ROWS-INDEX IS GREATER THAN 5
              PERFORM VARYING BINGO-BOARD-LIST-COLUMNS-INDEX FROM 1 BY 1
              UNTIL BINGO-BOARD-LIST-COLUMNS-INDEX IS GREATER THAN 5
              IF BINGO-BOARD-CELL-FOUND(
                BINGO-BOARD-LIST-INDEX
                BINGO-BOARD-LIST-ROWS-INDEX
                BINGO-BOARD-LIST-COLUMNS-INDEX
                 )
                 MOVE "-" TO BINGO-BOARD-EDITED-NUMBER (
                 BINGO-BOARD-LIST-ROWS-INDEX
                 BINGO-BOARD-LIST-COLUMNS-INDEX
                  )
              ELSE
                    MOVE BINGO-BOARD-CELL(
                    BINGO-BOARD-LIST-INDEX
                    BINGO-BOARD-LIST-ROWS-INDEX
                    BINGO-BOARD-LIST-COLUMNS-INDEX
                    ) TO BINGO-BOARD-EDITED-NUMBER (
                    BINGO-BOARD-LIST-ROWS-INDEX
                    BINGO-BOARD-LIST-COLUMNS-INDEX
                    )
              END-IF
              END-PERFORM
              DISPLAY BINGO-BOARD-ROW-NE(BINGO-BOARD-LIST-ROWS-INDEX)
           END-PERFORM.


       END PROGRAM SQUID-BINGO-1.
